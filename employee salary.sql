select  tm.employee,tm.employee_name,tm.esi_account_no,tm.uan_no,tm.status,tm.gender,tm.grade,tm.designation,tm.salary,
timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month))as total_days,hd.holidays,timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays as total_working_days,pd.present_days,(tm.salary * 0.8) as basic_sal_80, (tm.salary*.20) as hra_20,case when (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays - pd.present_days) >= 0 then (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays - pd.present_days) else 0 end as leave_days, round((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays),2) as wages_per_day,
round(((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days,2) as pf_salary,
round(((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days,2) + round(((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days,2) as take_home_salary,
case when tm.with_esi_pf = 1 and tm.salary < 21000 then round((((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days + ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.0075 ,2) else 0 end as esi,
case when tm.with_esi_pf = 1 then case when ( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days) < 15000  then round(( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.12 ,2) else 15000*0.12 end else 0 end as pf,
(case when tm.with_esi_pf = 1 and tm.salary < 21000 then round((((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days + ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.0075 ,2) else 0 end + case when tm.with_esi_pf = 1 then case when ( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days) < 15000  then round(( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.12 ,2) else 15000*0.12 end else 0 end ) as pf_detection,
((round(((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days,2) + round(((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days,2)) - (case when tm.with_esi_pf = 1 and tm.salary < 21000 then round((((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days + ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.0075 ,2) else 0 end + case when tm.with_esi_pf = 1 then case when ( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days) < 15000  then round(( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.12 ,2) else 15000*0.12 end else 0 end )) as net_wages,
case when tm.with_esi_pf = 1 and tm.salary < 21000 then round((((tm.salary * 0.2)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days + ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.325 ,2) else 0 end as employer_esi,
case when tm.with_esi_pf = 1 then case when ( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days) < 15000  then round(( ((tm.salary * 0.8)/ (timestampdiff(day,concat(2023,'-',01,'-01'),date_add( concat(2023,'-',01,'-01'), interval 1 month)) - hd.holidays)) * pd.present_days)*0.13 ,2) else 15000*0.13 end else 0 end as employer_pf


from `tabEmployee` tm left join `tabEmployee Checkin` ei on ei.employee=tm.employee

 left join (select count(*) as holidays from (select * from `tabHoliday` ei where  holiday_date >= '2023-01-01' and holiday_date <= '2023-01-31'  group by holiday_date) as eci) as hd on 1=1
  left join (select count(*) as present_days,employee from (select * from `tabEmployee Checkin` ei where (date(ei.time)) >= '2023-01-01' and (date(ei.time)) <= '2023-01-31' group by (date(ei.time)),employee) as eci group by employee) as pd on pd.employee=tm.employee 
  
  where (date(ei.time)) >= '2023-01-01' and (date(ei.time)) <= '2023-01-31' 
  
  group by tm.employee,tm.employee_name,tm.esi_account_no,tm.uan_no,tm.status,tm.gender,tm.grade,tm.salary
